[
[type keyword/Array type ident/var]
[type keyword/Arg type *]
[type keyword/Ptr type]
[type keyword/Struct type]
[type keyword/Union type]
[type ident/type]

[expr keyword/cast type expr]
[expr keyword/casts type [designated *]]
[expr keyword/sizeof type]
[expr keyword/nop]
[expr keyword/sval designated *]
[expr keyword/aval expr *]
[expr keyword/. expr ident/field]
[expr keyword/-> expr ident/field]
[expr expr expr *]
[expr ident/var]

# control(stmt)
[expr keyword/label ident/label]
[expr keyword/goto ident/label]
[expr keyword/cond branch *]
[expr keyword/while expr expr]
[expr keyword/for expr expr expr expr]
[expr keyword/return expr]
[expr keyword/returnvoid]
[expr keyword/continue]
[expr keyword/break]
[expr keyword/begin expr *]

# declare (stmt)
[expr keyword/var ident/local type]
[expr keyword/set ident/local type expr]

[block keyword/struct ident/var [fields *]]
[block keyword/union ident/var [fields *]]
[block keyword/fn ident/var [declare *] type expr]
[block keyword/const ident/var type expr]

# single definition
[declare ident/local type]
[fields ident/field type]
[designated ident/field expr]
[branch expr expr]
]
